package ${virginPackage}.rest.controllers;

import  ${virginPackage}.dto.mapper.I${metaData.getRealClassName()}Mapper;
import ${virginPackage}.presentation.businessDelegate.IBusinessDelegatorView;
import java.util.List;

import javax.faces.bean.ManagedProperty;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import ${package}.*;
import ${package}.dto.${metaData.getRealClassName()}DTO;

@RestController
@RequestMapping("/${metaData.getRealClassNameAsVariable()}")
public class ${metaData.getRealClassName()}RestController {
	
	private static final Logger log = LoggerFactory.getLogger(${metaData.getRealClassName()}RestController.class);

	@Autowired
    private IBusinessDelegatorView businessDelegatorView;
  
  	@Autowired
	private I${metaData.getRealClassName()}Mapper ${metaData.getRealClassNameAsVariable()}Mapper;
     
    @PutMapping(value = "/save${metaData.getRealClassName()}")
    public void save${metaData.getRealClassName()}(@RequestBody ${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception {
    	try {
    		${metaData.getRealClassName()} entity = ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}DTOTo${metaData.getRealClassName()}(${metaData.getRealClassNameAsVariable()}DTO);
    		
    		businessDelegatorView.save${metaData.getRealClassName()}(entity);
    	} catch (Exception e) {
    		log.error(e.getMessage(), e);
    		throw e;
    	}
    }
    
    @DeleteMapping(value = "/delete${metaData.getRealClassName()}/{id}")
    public void delete${metaData.getRealClassName()}(@PathVariable("id") ${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception {
    	try {
    		${metaData.getRealClassName()} entity = ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}DTOTo${metaData.getRealClassName()}(${metaData.getRealClassNameAsVariable()}DTO);
    		
    		businessDelegatorView.delete${metaData.getRealClassName()}(entity);
    	} catch (Exception e) {
    		log.error(e.getMessage(), e);
    		throw e;
    	}
    }
     
    @PutMapping(value = "/update${metaData.getRealClassName()}/")
    public void update${metaData.getRealClassName()}(@RequestBody ${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception {
    	try {
    		${metaData.getRealClassName()} entity = ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}DTOTo${metaData.getRealClassName()}(${metaData.getRealClassNameAsVariable()}DTO);
    		
    		businessDelegatorView.update${metaData.getRealClassName()}(entity);
    	} catch (Exception e) {
    		log.error(e.getMessage(), e);
    		throw e;
    	}
    }
    
    @PostMapping(value = "/getData${metaData.getRealClassName()}")
    public List<${metaData.getRealClassName()}DTO> getData${metaData.getRealClassName()}() throws Exception {
		try {
			return businessDelegatorView.getData${metaData.getRealClassName()}();
		} catch (Exception e) {
			log.error(e.getMessage(), e);
			throw e;
		}
    }
    
    @GetMapping(value = "/get${metaData.getRealClassName()}/{id}")
    public ${metaData.getRealClassName()}DTO get${metaData.getRealClassName()}(@PathVariable("id") ${metaData.primaryKey.getRealClassName()} ${metaData.primaryKey.getShowName()}) throws Exception {
    	try {
    		${metaData.getRealClassName()} ${metaData.getRealClassNameAsVariable()} = businessDelegatorView.get${metaData.getRealClassName()}(${metaData.primaryKey.getShowName()});
						
			return ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}To${metaData.getRealClassName()}DTO(${metaData.getRealClassNameAsVariable()});
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return null;
    }
        
    
} 