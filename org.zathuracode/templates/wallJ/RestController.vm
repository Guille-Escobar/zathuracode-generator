package ${virginPackage}.rest.controllers;

import  ${virginPackage}.dto.mapper.I${metaData.getRealClassName()}Mapper;
import ${virginPackage}.presentation.businessDelegate.IBusinessDelegatorView;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.ws.rs.*;

import ${package}.*;
import ${package}.dto.${metaData.getRealClassName()}DTO;

@Stateless 
@LocalBean
@Path("/${metaData.getRealClassNameAsVariable()}")
public class ${metaData.getRealClassName()}RestController {
	
	private static final Logger log = LoggerFactory.getLogger(${metaData.getRealClassName()}RestController.class);

	@EJB
    private IBusinessDelegatorView businessDelegatorView;
  
  	@EJB
	private I${metaData.getRealClassName()}Mapper ${metaData.getRealClassNameAsVariable()}Mapper;
    
    @PUT
    @Produces({"application/xml","application/json"})
    public void save${metaData.getRealClassName()}(@PathParam(value = "/save${metaData.getRealClassName()}") ${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception {
    	log.debug("Ingresó a save${metaData.getRealClassName()} rest controller");
    	try {
    		${metaData.getRealClassName()} entity = ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}DTOTo${metaData.getRealClassName()}(${metaData.getRealClassNameAsVariable()}DTO);
    		
    		businessDelegatorView.save${metaData.getRealClassName()}(entity);
    	} catch (Exception e) {
    		log.error(e.getMessage(), e);
    		throw e;
    	}
    }
   
   @DELETE
   @Produces({"application/xml","application/json"})
    public void delete${metaData.getRealClassName()}(@PathParam(value = "/delete${metaData.getRealClassName()}/{id}") ${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception {
    	log.debug("Ingresó a delete${metaData.getRealClassName()} rest controller");
    	try {
    		${metaData.getRealClassName()} entity = ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}DTOTo${metaData.getRealClassName()}(${metaData.getRealClassNameAsVariable()}DTO);
    		
    		businessDelegatorView.delete${metaData.getRealClassName()}(entity);
    	} catch (Exception e) {
    		log.error(e.getMessage(), e);
    		throw e;
    	}
    } 
    
    @PUT
    @Produces({"application/xml","application/json"})
    public void update${metaData.getRealClassName()}(@PathParam(value = "/update${metaData.getRealClassName()}/") ${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception {
    	log.debug("Ingresó a update${metaData.getRealClassName()} rest controller");
    	try {
    		${metaData.getRealClassName()} entity = ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}DTOTo${metaData.getRealClassName()}(${metaData.getRealClassNameAsVariable()}DTO);
    		
    		businessDelegatorView.update${metaData.getRealClassName()}(entity);
    	} catch (Exception e) {
    		log.error(e.getMessage(), e);
    		throw e;
    	}
    }
    
  /*  @POST
    @Produces({"application/xml","application/json"})
    public List<${metaData.getRealClassName()}DTO> getData${metaData.getRealClassName()}(@PathParam(value = "/getData${metaData.getRealClassName()}") ) throws Exception {
    	log.debug("Ingresó a getData${metaData.getRealClassName()} rest controller");
		try {
			return businessDelegatorView.getData${metaData.getRealClassName()}();
		} catch (Exception e) {
			log.error(e.getMessage(), e);
			throw e;
		}
    } */
    
    @GET
    @Produces({"application/xml","application/json"})
    public ${metaData.getRealClassName()}DTO get${metaData.getRealClassName()}(@PathParam(value = "/get${metaData.getRealClassName()}/{id}") ${metaData.primaryKey.getRealClassName()} ${metaData.primaryKey.getShowName()}) throws Exception {
    	log.debug("Ingresó a get${metaData.getRealClassName()} rest controller");
    	try {
    		${metaData.getRealClassName()} ${metaData.getRealClassNameAsVariable()} = businessDelegatorView.get${metaData.getRealClassName()}(${metaData.primaryKey.getShowName()});
						
			return ${metaData.getRealClassNameAsVariable()}Mapper.${metaData.getRealClassNameAsVariable()}To${metaData.getRealClassName()}DTO(${metaData.getRealClassNameAsVariable()});
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return null;
    }
        
    
} 